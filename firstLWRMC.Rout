
R version 2.15.2 (2012-10-26) -- "Trick or Treat"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # The goal of this script is to run a basic LWR model using the St. Paul working data...
> 
> # What working directory will it be in?
> # Try to put it in an "LWR" folder inside analysis.
> # Remember to save the data to "Data/R2GIS"
> require(foreign)
Loading required package: foreign
> require(multicore, quietly = TRUE)
> require(fields, quietly = TRUE)
Spam version 0.29-2 (2012-08-17) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following object(s) are masked from ‘package:base’:

    backsolve, forwardsolve

> 
> # the following command loads up some functions we'll use
> source("helper/LWRfunctions.R")
> 
> MYMODEL = "logSALE_VA~log(MAX)+FIN_SQ_FT+ACRES_POLY+I(ACRES_POLY^2)+YEAR_BUILT+factor(TimePeriod)+MED_INCOME+ELEM"
> MYMODELsmall = "logSALE_VA~log(MAX)+FIN_SQ_FT+ACRES_POLY+I(ACRES_POLY^2)+YEAR_BUILT+factor(TimePeriod)"
> KVECTOR = c(100, 200, 500, 1000, 2000)
> 
> filePrefix = "../Data/R2GIS/CleanData/"
> inputFile = "Sales20052010.dbf"
> DATAFRAME = read.dbf(paste0(filePrefix, inputFile))
> start = Sys.time()
> N =  dim(DATAFRAME)[1]
> output.raw = mclapply(1:N,
+                       LWRyear2,
+                       Data.Frame = DATAFRAME,
+                       my.model = MYMODEL, my.modelSMALL = MYMODELsmall,
+                       kvector = KVECTOR
+                       )
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6
[1] 8
[1] 7
[1] 9
[1] 10
[1] 11
[1] 12
[1] 14
[1] 18
[1] 13
[1] 21
[1] 19
[1] 20
[1] 15
[1] 17
[1] 22
[1] 16
[1] 23
[1] 25
[1] 29
[1] 31
[1] 26
[1] 30
[1] 27
[1] 33
[1] 32
[1] 24
[1] 28
[1] 34
[1] 36
[1] 37
[1] 44
[1] 40
[1] 41
[1] 38
[1] 42
[1] 39
[1] 35
[1] 43
Error in `contrasts<-`(`*tmp*`, value = contr.funs[1 + isOF[nn]]) : 
  contrasts can be applied only to factors with 2 or more levels
[1] 55
[1] 51
[1] 47
[1] 54
[1] 48
[1] 50
[1] 49
[1] 53
[1] 52
[1] 46
[1] 65
[1] 66
[1] 58
[1] 62
[1] 61
[1] 59
[1] 60
[1] 64
[1] 63
[1] 57
[1] 76
[1] 77
[1] 73
[1] 72
[1] 69
[1] 70
[1] 71
[1] 74
[1] 75
[1] 68
[1] 88
[1] 87
[1] 83
[1] 84
[1] 80
[1] 81
[1] 82
[1] 85
[1] 86
[1] 79
Error in `contrasts<-`(`*tmp*`, value = contr.funs[1 + isOF[nn]]) : 
  contrasts can be applied only to factors with 2 or more levels
Error in `contrasts<-`(`*tmp*`, value = contr.funs[1 + isOF[nn]]) : 
  contrasts can be applied only to factors with 2 or more levels
[1] 99
[1] 94
[1] 91
[1] 92
[1] 96
[1] 93
[1] 97
[1] 90
[1] 110
[1] 105
[1] 102
[1] 103
[1] 104
[1] 107
[1] 108
[1] 101
[1] 121
[1] 113
[1] 116
[1] 114
[1] 115
[1] 118
[1] 119
[1] 112
[1] 132
[1] 127
[1] 124
[1] 125
[1] 126
[1] 129
[1] 130
[1] 123
Error in `contrasts<-`(`*tmp*`, value = contr.funs[1 + isOF[nn]]) : 
  contrasts can be applied only to factors with 2 or more levels
[1] 143
[1] 138
[1] 135
[1] 140
[1] 136
[1] 137
[1] 134
[1] 154
[1] 149
[1] 146
[1] 151
[1] 147
[1] 148
[1] 145
[1] 160
[1] 165
[1] 157
[1] 162
[1] 158
[1] 159
[1] 156
Error in `contrasts<-`(`*tmp*`, value = contr.funs[1 + isOF[nn]]) : 
  contrasts can be applied only to factors with 2 or more levels
[1] 168
[1] 171
[1] 176
[1] 169
[1] 170
[1] 167
[1] 179
[1] 182
[1] 187
[1] 180
[1] 181
[1] 178
[1] 190
[1] 193
[1] 198
[1] 191
[1] 192
[1] 189
[1] 201
[1] 204
[1] 209
[1] 203
[1] 202
[1] 200
[1] 220
[1] 215
[1] 212
[1] 213
[1] 214
[1] 211
[1] 226
[1] 231
[1] 223
[1] 224
[1] 225
[1] 222
[1] 237
[1] 235
[1] 242
[1] 234
[1] 236
[1] 233
[1] 248
[1] 245
[1] 246
[1] 253
[1] 247
[1] 244
[1] 259
[1] 257
[1] 256
[1] 264
[1] 258
[1] 255
[1] 270
[1] 268
[1] 267
[1] 269
[1] 275
[1] 266
[1] 281
[1] 279
[1] 278
[1] 280
[1] 286
[1] 277
[1] 292
[1] 290
[1] 289
[1] 291
[1] 297
[1] 288
[1] 303
[1] 301
[1] 300
[1] 302
[1] 308
[1] 299
[1] 314
[1] 312
[1] 311
[1] 313
[1] 319
[1] 310
[1] 325
[1] 323
[1] 324
[1] 322
[1] 330
[1] 321
Error in `contrasts<-`(`*tmp*`, value = contr.funs[1 + isOF[nn]]) : 
  contrasts can be applied only to factors with 2 or more levels
[1] 336
[1] 334
[1] 333
[1] 341
[1] 332
[1] 347
[1] 345
[1] 344
[1] 352
[1] 343
[1] 358
[1] 356
[1] 355
[1] 363
[1] 354
[1] 369
[1] 366
[1] 367
[1] 374
[1] 365
[1] 380
[1] 377
[1] 378
[1] 385
[1] 376
[1] 391
[1] 388
[1] 389
[1] 396
[1] 387
[1] 400
[1] 399
[1] 402
[1] 407
[1] 398
[1] 410
[1] 411
[1] 413
[1] 418
[1] 409
[1] 421
[1] 422
[1] 424
[1] 429
[1] 420
Error in `contrasts<-`(`*tmp*`, value = contr.funs[1 + isOF[nn]]) : 
  contrasts can be applied only to factors with 2 or more levels
[1] 432
[1] 435
[1] 440
[1] 431
[1] 443
[1] 446
[1] 451
[1] 442
[1] 454
[1] 457
[1] 462
[1] 453
[1] 465
[1] 468
[1] 473
[1] 464
Error in `contrasts<-`(`*tmp*`, value = contr.funs[1 + isOF[nn]]) : 
  contrasts can be applied only to factors with 2 or more levels
[1] 479
[1] 484
[1] 475
[1] 490
[1] 495
[1] 486
[1] 501
[1] 497
[1] 506
[1] 512
[1] 508
[1] 517
[1] 523
[1] 528
[1] 519
[1] 534
[1] 530
[1] 539
[1] 545
[1] 541
[1] 550
[1] 556
[1] 552
[1] 561
[1] 567
[1] 572
[1] 563
[1] 578
[1] 583
[1] 574
[1] 589
[1] 594
[1] 585
[1] 600
[1] 596
[1] 605
[1] 611
[1] 616
[1] 607
[1] 627
[1] 622
[1] 618
[1] 638
[1] 633
[1] 629
Error in `contrasts<-`(`*tmp*`, value = contr.funs[1 + isOF[nn]]) : 
  contrasts can be applied only to factors with 2 or more levels
[1] 649
[1] 644
[1] 660
[1] 655
[1] 671
[1] 666
[1] 682
[1] 677
[1] 693
[1] 688
[1] 704
[1] 699
[1] 715
[1] 710
[1] 726
[1] 721
[1] 737
[1] 732
[1] 748
[1] 743
[1] 754
[1] 759
[1] 765
[1] 770
[1] 776
[1] 781
[1] 787
[1] 792
[1] 798
[1] 803
[1] 809
[1] 814
[1] 820
[1] 825
[1] 831
[1] 836
[1] 847
[1] 842
[1] 853
[1] 858
[1] 864
[1] 869
[1] 875
[1] 880
[1] 886
[1] 891
[1] 902
[1] 897
[1] 908
[1] 913
[1] 924
[1] 919
[1] 930
[1] 935
[1] 946
[1] 941
[1] 952
[1] 957
