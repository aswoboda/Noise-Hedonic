
R version 2.15.2 (2012-10-26) -- "Trick or Treat"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # The goal of this script is to run multiple LWR models using the St. Paul working data to find the best model
> 
> require(foreign)
Loading required package: foreign
> require(multicore, quietly = TRUE)
> require(fields, quietly = TRUE)
Spam version 0.29-2 (2012-08-17) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following object(s) are masked from ‘package:base’:

    backsolve, forwardsolve

> 
> # the following command loads up some functions we'll use
> source("helper/LWRfunctions.R")
> 
> MYMODELS = c(#"logSALE_VA~MAX+FIN_SQ_FT+ACRES_POLY+YEAR_BUILT+BEDS+BATH+GARSQFT+HOME_STYLE",
+ #              "logSALE_VA~MAX+FIN_SQ_FT+ACRES_POLY+YEAR_BUILT+HOME_STYLE",
+ #              "logSALE_VA~MAX+FIN_SQ_FT+ACRES_POLY+YEAR_BUILT+BEDS+BATH+GARSQFT+HOME_STYLE+OWNOCC+MED_INCOME+MCA3+LAKE_dist+PARK_dist+SHOP_dist+CBD_dist",
+ #              "logSALE_VA~MAX+FIN_SQ_FT+ACRES_POLY+YEAR_BUILT+HOME_STYLE+OWNOCC+MED_INCOME+MCA3+LAKE_dist+PARK_dist+SHOP_dist+CBD_dist") #,
+             "logSALE_VA~MAX+FIN_SQ_FT+ACRES_POLY+YEAR_BUILT+HOME_STYLE+OWNOCC+MED_INCOME+MCA3+LAKE_dist+PARK_dist+SHOP_dist+CBD_dist+CITY",
+             "logSALE_VA~MAX+FIN_SQ_FT+ACRES_POLY+YEAR_BUILT+BEDS+BATH+GARSQFT+HOME_STYLE+OWNOCC+MED_INCOME+MCA3+LAKE_dist+PARK_dist+SHOP_dist+CBD_dist+CITY")
> KVECTOR = c(25, 50, 75, 100, 125, 150, 175, 200, 225, 400, 600, 800, 1000, 2000, 4000)
> 
> filePrefix = "/home/aswoboda/NoiseHedonicProject/Data/R2GIS/CleanData/"
> inputFile = "Sales20052010.dbf"
> dataSource = strsplit(inputFile, "\\.")[[1]][1]
> 
> DATAFRAME = read.dbf(paste0(filePrefix, inputFile))
> DATAFRAME = DATAFRAME[which(DATAFRAME$COUNTY_ID == "037" & DATAFRAME$BATH>.8), ]
> N =  dim(DATAFRAME)[1]
> obs2run = rownames(DATAFRAME)[which(DATAFRAME$TimePeriod>11)]
> 
> for (modelNum in 1:length(MYMODELS)) { #
+   MYMODEL = MYMODELS[modelNum]
+   start = Sys.time()
+   output.raw = mclapply(obs2run,
+                         LWRtimelag,
+                         Data.Frame = DATAFRAME,
+                         my.model = MYMODEL, 
+                         my.modelSMALL = substr(MYMODEL, 1, nchar(MYMODEL) - 5),
+                         kvector = KVECTOR,
+                         timelag = 12,
+                         mc.cores = 16
+                         )
+   end = Sys.time()
+   print(end - start)
+ 
+   names(output.raw) = DATAFRAME$UNIQID[obs2run]
+   output = Reorganizer(output.raw)
+   save(output, inputFile, MYMODEL, file = paste0(filePrefix, "Dakota", "LWRmodel", modelNum+4, "-", Sys.Date(), ".RData"))
+   rm(output, output.raw)
+   gc()
+   print(gc())
+ }
[1] "17000"
[1] "19000"
[1] "21000"
[1] "22000"
[1] "24000"
[1] "25000"
[1] "27000"
[1] "28000"
[1] "30000"
Time difference of 12.43107 mins
          used (Mb) gc trigger  (Mb) max used  (Mb)
Ncells  425231 22.8    1368238  73.1  1670553  89.3
Vcells 1068286  8.2   27027981 206.3 42164581 321.7
[1] "17000"
[1] "19000"
[1] "21000"
[1] "24000"
[1] "22000"
[1] "25000"
[1] "27000"
[1] "28000"
[1] "30000"
Time difference of 15.29394 mins
          used (Mb) gc trigger  (Mb) max used  (Mb)
Ncells  425361 22.8    1476649  78.9  1670553  89.3
Vcells 1068447  8.2   29074298 221.9 45384404 346.3
> 
> proc.time()
     user    system   elapsed 
20525.578   108.210  1687.018 
